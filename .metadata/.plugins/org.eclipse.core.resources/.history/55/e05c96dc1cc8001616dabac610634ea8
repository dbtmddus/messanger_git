import java.util.Arrays;
import java.util.Scanner;

public class Solution {
	static int[] home;
	static int[] des;

	public static void main(String[] args) {

		Scanner in = new Scanner(System.in);
		int total_cycle = in.nextInt();

		for (int cycle=0; cycle< total_cycle; cycle++){

			int n_home = in.nextInt();
			int n_des=in.nextInt();

			home = new int[n_home];
			for (int i=0; i< n_home; i++){
				home[i] = in.nextInt();
			}	
			Arrays.sort(home);

			int[] distance = new int[n_home-1];
			for (int i=0; i<n_home-1; i++){
				distance[i] = home[i+1]-home[i];
			}

			int[] distance_temp =distance.clone();
			Arrays.sort(distance);
			int[] sorted_distance = distance.clone();
			distance = distance_temp;

			int sum_of_longest=0;
			for (int i=0; i<n_des; i++){
				sum_of_longest = sorted_distance[n_home-2-i];
				distance[Arrays.binarySearch(distance, sorted_distance[n_home-2-i])] = -1;
			}

			System.out.println(Arrays.toString(home));
			System.out.println(Arrays.toString(distance));
			System.out.println(Arrays.toString(sorted_distance));

			int total_distance=0;

			for (int i=0; i<n_home-1; i++){

				int local_i = i;
				int d = distance[i];
				while (d!=-1){
					d = distance[i];
					total_distance += d;
					i++;
				}
				i=local_i;				
			}

			total_distance = (home[n_home-1]-home[0]);
			System.out.println("총 거리 : " + total_distance );
			System.out.println("제외 거리  : " + sum_of_longest);
			System.out.println(total_distance - sum_of_longest);
		}
	}
}
