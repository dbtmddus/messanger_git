package update;


import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.nio.charset.Charset;
import java.util.Vector;

public class client_obj {

	static Socket connected_socket = null;
	static String server_ip;	//"127.0.0.1";
	//static String server_ip = "172.30.96.107";
	static int server_port;
	static PrintWriter send;
	static BufferedReader listen;

	static Socket socket_for_chat = null;

	public client_obj(String ip){//, int port_n) {
		server_ip = ip;
		server_port=1244;
		//server_port = port_n;
	}
	public void enter() throws IOException{
		while (true){
			try {
				connected_socket = new Socket(server_ip, server_port);
				send = new PrintWriter(new BufferedWriter(new OutputStreamWriter(connected_socket.getOutputStream()))); //추가
				listen = new BufferedReader(new InputStreamReader(connected_socket.getInputStream()));

				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				socket_for_chat = new Socket(server_ip, server_port);
				break;
			} catch (UnknownHostException e) {
				e.printStackTrace();
				System.exit(1);
				break;
			} catch (IOException e) {
				System.out.println(server_port+" is used, connect with other port");
				server_port++;
			}
		}
		/************************************************************************************/

		System.out.println("입장되셨습니다");
		show_info();
		
		send.println(command.update_txt);
		get_update_txt();
	}
	public void get_update_txt() throws IOException{
		String client_Dir = ".\\qwe";
		File client_file = new File(client_Dir+"\\client.txt");		

		Vector<String> client_ChattingRecord = new Vector<String>(0);
		BufferedReader client_br = new BufferedReader(new FileReader(client_file));
		String line_for_client;
		while ((line_for_client = client_br.readLine()) != null) {
			client_ChattingRecord.add(line_for_client);
		}
		
		System.out.println("client_ChattingRecord : "+client_ChattingRecord.toString());

		String receive_str;
		Vector<String> str_will_be_added = new Vector<String>(0);
		int server_ChattingRecord_size = Integer.parseInt(listen.readLine());
		System.out.println("receive size : "+ server_ChattingRecord_size);
		
		for (int i=server_ChattingRecord_size-1; i>=0; i--){	//서버측 txt뒤에서부터 받다가 읽은거 나오면 중단,
			//System.out.println(server_ChattingRecord.size()-1);
			receive_str = listen.readLine();
			System.out.println("receive : "+receive_str);
			if(!client_ChattingRecord.contains(receive_str)){	//string은 이걸로 안될 수 있음.
				str_will_be_added.add(receive_str);
				send.println("continue");
				send.flush();
				System.out.println("send b: continue");
			}else{
				send.println("stop");
				send.flush();
				System.out.println("send b: stop");
				break;	//하나라도 읽은거 나오면 중단
			}
		}

		for(int i=str_will_be_added.size()-1; i>=0; i--){
			record_txt("client.txt",str_will_be_added.elementAt(i)+"\n");
		}
	}
	
	public static void record_txt(String file_name, String msg) throws IOException{
		//File f = new File("C:\\Users\\dbtmddus\\Desktop\\qwerty\\dd.txt");		
		File f = new File(".\\qwe\\"+file_name);		

		String ss = f.getParentFile().toString();
		new File(ss).mkdirs();

		FileOutputStream f_out = new FileOutputStream(f, true);
		f_out.write(msg.getBytes(Charset.forName("EUC-KR")));	//EUC-KR-윈도우, UTF-8 리눅스.
		f_out.close();
	}	

	public void show_info(){
		System.out.println("client 정보 : "+connected_socket.getLocalSocketAddress());
		System.out.println("server 정보 : "+connected_socket.getRemoteSocketAddress());
	}

}//end
